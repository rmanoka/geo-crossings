initSidebarItems({"enum":[["Error",""],["Geometry","An enum representing any possible geometry type."]],"macro":[["line_string","Creates a `LineString` containing the given coordinates."],["point","Creates a `Point` from the given coordinates."],["polygon","Creates a `Polygon` containing the given coordinates."]],"struct":[["Coordinate","A lightweight struct used to store coordinates on the 2-dimensional Cartesian plane."],["GeometryCollection","A collection of `Geometry` types."],["InvalidRectCoordinatesError",""],["Line","A line segment made up of exactly two `Coordinate`s."],["LineString","An ordered collection of two or more [`Coordinate`]s, representing a path between locations."],["MultiLineString","A collection of `LineString`s. Can be created from a `Vec` of `LineString`s or from an Iterator which yields `LineString`s. Iterating over this object yields the component `LineString`s."],["MultiPoint","A collection of `Point`s. Can be created from a `Vec` of `Point`s, or from an Iterator which yields `Point`s. Iterating over this object yields the component `Point`s."],["MultiPolygon","A collection of `Polygon`s. Can be created from a `Vec` of `Polygon`s, or from an Iterator which yields `Polygon`s. Iterating over this object yields the component `Polygon`s."],["Point","A single point in 2D space."],["PointsIter","A `Point` iterator returned by the `points_iter` method"],["Polygon","A bounded two-dimensional area."],["Rect","An axis-aligned bounded 2D rectangle whose area is defined by minimum and maximum `Coordinate`s."],["Triangle","A bounded 2D area whose three vertices are defined by `Coordinate`s. The semantics and validity are that of the equivalent [`Polygon`]; in addition, the three vertices must not be collinear and they must be distinct."]],"trait":[["CoordFloat",""],["CoordNum","The type of an x or y value of a point/coordinate."],["CoordinateType",""]]});